"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var ajaxClient_1 = __importDefault(require("./ajaxClient"));

var ajaxAccount_1 = __importDefault(require("./api/ajaxAccount"));

var ajaxCart_1 = __importDefault(require("./api/ajaxCart"));

var ajaxCookieBanner_1 = __importDefault(require("./api/ajaxCookieBanner"));

var ajaxForgotPassword_1 = __importDefault(require("./api/ajaxForgotPassword"));

var ajaxLogin_1 = __importDefault(require("./api/ajaxLogin"));

var ajaxPaymentFormSettings_1 = __importDefault(require("./api/ajaxPaymentFormSettings"));

var ajaxPaymentMethods_1 = __importDefault(require("./api/ajaxPaymentMethods"));

var ajaxRegister_1 = __importDefault(require("./api/ajaxRegister"));

var ajaxResetPassword_1 = __importDefault(require("./api/ajaxResetPassword"));

var ajaxShippingMethods_1 = __importDefault(require("./api/ajaxShippingMethods"));

var settings_1 = __importDefault(require("./api/apps/settings"));

var checkoutFields_1 = __importDefault(require("./api/checkoutFields"));

var countries_1 = __importDefault(require("./api/countries"));

var currencies_1 = __importDefault(require("./api/currencies"));

var customerGroups_1 = __importDefault(require("./api/customerGroups"));

var customers_1 = __importDefault(require("./api/customers"));

var files_1 = __importDefault(require("./api/files"));

var discounts_1 = __importDefault(require("./api/orders/discounts"));

var items_1 = __importDefault(require("./api/orders/items"));

var orders_1 = __importDefault(require("./api/orders/orders"));

var statuses_1 = __importDefault(require("./api/orders/statuses"));

var transactions_1 = __importDefault(require("./api/orders/transactions"));

var pages_1 = __importDefault(require("./api/pages"));

var paymentGateways_1 = __importDefault(require("./api/paymentGateways"));

var paymentMethods_1 = __importDefault(require("./api/paymentMethods"));

var productCategories_1 = __importDefault(require("./api/productCategories"));

var images_1 = __importDefault(require("./api/products/images"));

var options_1 = __importDefault(require("./api/products/options"));

var optionValues_1 = __importDefault(require("./api/products/optionValues"));

var products_1 = __importDefault(require("./api/products/products"));

var variants_1 = __importDefault(require("./api/products/variants"));

var redirects_1 = __importDefault(require("./api/redirects"));

var settings_2 = __importDefault(require("./api/settings"));

var shippingMethods_1 = __importDefault(require("./api/shippingMethods"));

var sitemap_1 = __importDefault(require("./api/sitemap"));

var text_1 = __importDefault(require("./api/text"));

var assets_1 = __importDefault(require("./api/theme/assets"));

var placeholders_1 = __importDefault(require("./api/theme/placeholders"));

var settings_3 = __importDefault(require("./api/theme/settings"));

var theme_1 = __importDefault(require("./api/theme/theme"));

var tokens_1 = __importDefault(require("./api/tokens"));

var webhooks_1 = __importDefault(require("./api/webhooks"));

var apiClient_1 = __importDefault(require("./apiClient"));

var account_1 = __importDefault(require("./webstore/account"));

var serviceActions_1 = __importDefault(require("./webstore/serviceActions"));

var serviceLogs_1 = __importDefault(require("./webstore/serviceLogs"));

var services_1 = __importDefault(require("./webstore/services"));

var serviceSettings_1 = __importDefault(require("./webstore/serviceSettings"));

var webstoreClient_1 = __importDefault(require("./webstoreClient"));

var Client = function () {
  var Client = function Client() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
      apiBaseUrl: {},
      apiToken: {},
      ajaxBaseUrl: {},
      webstoreToken: {}
    };

    _classCallCheck(this, Client);

    this.apiBaseUrl = options.apiBaseUrl || "/api/v1";
    this.apiToken = options.apiToken;
    this.ajaxBaseUrl = options.ajaxBaseUrl || "/ajax";
    this.webstoreToken = options.webstoreToken;
    var apiClient = new apiClient_1.default({
      baseUrl: this.apiBaseUrl,
      token: this.apiToken
    });
    var ajaxClient = new ajaxClient_1.default({
      baseUrl: this.ajaxBaseUrl
    });
    var webstoreClient = new webstoreClient_1.default({
      token: this.webstoreToken
    });
    this.products = new products_1.default(apiClient);
    this.products.options = new options_1.default(apiClient);
    this.products.options.values = new optionValues_1.default(apiClient);
    this.products.variants = new variants_1.default(apiClient);
    this.products.images = new images_1.default(apiClient);
    this.productCategories = new productCategories_1.default(apiClient);
    this.customers = new customers_1.default(apiClient);
    this.orders = new orders_1.default(apiClient);
    this.orders.discounts = new discounts_1.default(apiClient);
    this.orders.transactions = new transactions_1.default(apiClient);
    this.orders.items = new items_1.default(apiClient);
    this.orderStatuses = new statuses_1.default(apiClient);
    this.shippingMethods = new shippingMethods_1.default(apiClient);
    this.paymentMethods = new paymentMethods_1.default(apiClient);
    this.paymentGateways = new paymentGateways_1.default(apiClient);
    this.customerGroups = new customerGroups_1.default(apiClient);
    this.sitemap = new sitemap_1.default(apiClient);
    this.theme = new theme_1.default(apiClient);
    this.theme.settings = new settings_3.default(apiClient);
    this.theme.assets = new assets_1.default(apiClient);
    this.theme.placeholders = new placeholders_1.default(apiClient);
    this.countries = new countries_1.default(apiClient);
    this.currencies = new currencies_1.default(apiClient);
    this.text = new text_1.default(apiClient);
    this.settings = new settings_2.default(apiClient);
    this.checkoutFields = new checkoutFields_1.default(apiClient);
    this.pages = new pages_1.default(apiClient);
    this.tokens = new tokens_1.default(apiClient);
    this.redirects = new redirects_1.default(apiClient);
    this.webhooks = new webhooks_1.default(apiClient);
    this.files = new files_1.default(apiClient);
    this.apps = {
      settings: {}
    };
    this.apps.settings = new settings_1.default(apiClient);
    this.ajax = {
      products: {},
      sitemap: {},
      cart: {},
      login: {},
      register: {},
      account: {},
      forgotPassword: {},
      resetPassword: {},
      cookieBanner: {},
      countries: {},
      currencies: {},
      shippingMethods: {},
      paymentMethods: {},
      paymentFormSettings: {},
      pages: {}
    };
    this.ajax.products = new products_1.default(ajaxClient);
    this.ajax.sitemap = new sitemap_1.default(ajaxClient);
    this.ajax.cart = new ajaxCart_1.default(ajaxClient);
    this.ajax.login = new ajaxLogin_1.default(ajaxClient);
    this.ajax.register = new ajaxRegister_1.default(ajaxClient);
    this.ajax.account = new ajaxAccount_1.default(ajaxClient);
    this.ajax.forgotPassword = new ajaxForgotPassword_1.default(ajaxClient);
    this.ajax.resetPassword = new ajaxResetPassword_1.default(ajaxClient);
    this.ajax.cookieBanner = new ajaxCookieBanner_1.default(ajaxClient);
    this.ajax.countries = new countries_1.default(ajaxClient);
    this.ajax.currencies = new currencies_1.default(ajaxClient);
    this.ajax.shippingMethods = new ajaxShippingMethods_1.default(ajaxClient);
    this.ajax.paymentMethods = new ajaxPaymentMethods_1.default(ajaxClient);
    this.ajax.paymentFormSettings = new ajaxPaymentFormSettings_1.default(ajaxClient);
    this.ajax.pages = new pages_1.default(ajaxClient);
    this.webstore = {
      account: {},
      services: {
        settings: {},
        actions: {},
        logs: {}
      }
    };
    this.webstore.account = new account_1.default(webstoreClient);
    this.webstore.services = new services_1.default(webstoreClient);
    this.webstore.services.settings = new serviceSettings_1.default(webstoreClient);
    this.webstore.services.actions = new serviceActions_1.default(webstoreClient);
    this.webstore.services.logs = new serviceLogs_1.default(webstoreClient);
  };

  Client.authorize = function (baseUrl, email) {
    return apiClient_1.default.authorize(baseUrl, email);
  };

  Client.authorizeInWebStore = function (email, adminUrl) {
    return webstoreClient_1.default.authorize(email, adminUrl);
  };

  return Client;
}();

exports.default = Client;