"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ajaxClient_1 = __importDefault(require("./ajaxClient"));
const ajaxAccount_1 = __importDefault(require("./api/ajaxAccount"));
const ajaxCart_1 = __importDefault(require("./api/ajaxCart"));
const ajaxCookieBanner_1 = __importDefault(require("./api/ajaxCookieBanner"));
const ajaxForgotPassword_1 = __importDefault(require("./api/ajaxForgotPassword"));
const ajaxLogin_1 = __importDefault(require("./api/ajaxLogin"));
const ajaxPaymentFormSettings_1 = __importDefault(require("./api/ajaxPaymentFormSettings"));
const ajaxPaymentMethods_1 = __importDefault(require("./api/ajaxPaymentMethods"));
const ajaxRegister_1 = __importDefault(require("./api/ajaxRegister"));
const ajaxResetPassword_1 = __importDefault(require("./api/ajaxResetPassword"));
const ajaxShippingMethods_1 = __importDefault(require("./api/ajaxShippingMethods"));
const settings_1 = __importDefault(require("./api/apps/settings"));
const checkoutFields_1 = __importDefault(require("./api/checkoutFields"));
const countries_1 = __importDefault(require("./api/countries"));
const currencies_1 = __importDefault(require("./api/currencies"));
const customerGroups_1 = __importDefault(require("./api/customerGroups"));
const customers_1 = __importDefault(require("./api/customers"));
const files_1 = __importDefault(require("./api/files"));
const discounts_1 = __importDefault(require("./api/orders/discounts"));
const items_1 = __importDefault(require("./api/orders/items"));
const orders_1 = __importDefault(require("./api/orders/orders"));
const statuses_1 = __importDefault(require("./api/orders/statuses"));
const transactions_1 = __importDefault(require("./api/orders/transactions"));
const pages_1 = __importDefault(require("./api/pages"));
const paymentGateways_1 = __importDefault(require("./api/paymentGateways"));
const paymentMethods_1 = __importDefault(require("./api/paymentMethods"));
const productCategories_1 = __importDefault(require("./api/productCategories"));
const images_1 = __importDefault(require("./api/products/images"));
const options_1 = __importDefault(require("./api/products/options"));
const optionValues_1 = __importDefault(require("./api/products/optionValues"));
const products_1 = __importDefault(require("./api/products/products"));
const variants_1 = __importDefault(require("./api/products/variants"));
const redirects_1 = __importDefault(require("./api/redirects"));
const settings_2 = __importDefault(require("./api/settings"));
const shippingMethods_1 = __importDefault(require("./api/shippingMethods"));
const sitemap_1 = __importDefault(require("./api/sitemap"));
const text_1 = __importDefault(require("./api/text"));
const assets_1 = __importDefault(require("./api/theme/assets"));
const placeholders_1 = __importDefault(require("./api/theme/placeholders"));
const settings_3 = __importDefault(require("./api/theme/settings"));
const theme_1 = __importDefault(require("./api/theme/theme"));
const tokens_1 = __importDefault(require("./api/tokens"));
const webhooks_1 = __importDefault(require("./api/webhooks"));
const apiClient_1 = __importDefault(require("./apiClient"));
const account_1 = __importDefault(require("./webstore/account"));
const serviceActions_1 = __importDefault(require("./webstore/serviceActions"));
const serviceLogs_1 = __importDefault(require("./webstore/serviceLogs"));
const services_1 = __importDefault(require("./webstore/services"));
const serviceSettings_1 = __importDefault(require("./webstore/serviceSettings"));
const webstoreClient_1 = __importDefault(require("./webstoreClient"));
let Client = (() => {
    class Client {
        constructor(options = {
            apiBaseUrl: {},
            apiToken: {},
            ajaxBaseUrl: {},
            webstoreToken: {},
        }) {
            this.apiBaseUrl = options.apiBaseUrl || "/api/v1";
            this.apiToken = options.apiToken;
            this.ajaxBaseUrl = options.ajaxBaseUrl || "/ajax";
            this.webstoreToken = options.webstoreToken;
            const apiClient = new apiClient_1.default({
                baseUrl: this.apiBaseUrl,
                token: this.apiToken,
            });
            const ajaxClient = new ajaxClient_1.default({ baseUrl: this.ajaxBaseUrl });
            const webstoreClient = new webstoreClient_1.default({ token: this.webstoreToken });
            this.products = new products_1.default(apiClient);
            this.products.options = new options_1.default(apiClient);
            this.products.options.values = new optionValues_1.default(apiClient);
            this.products.variants = new variants_1.default(apiClient);
            this.products.images = new images_1.default(apiClient);
            this.productCategories = new productCategories_1.default(apiClient);
            this.customers = new customers_1.default(apiClient);
            this.orders = new orders_1.default(apiClient);
            this.orders.discounts = new discounts_1.default(apiClient);
            this.orders.transactions = new transactions_1.default(apiClient);
            this.orders.items = new items_1.default(apiClient);
            this.orderStatuses = new statuses_1.default(apiClient);
            this.shippingMethods = new shippingMethods_1.default(apiClient);
            this.paymentMethods = new paymentMethods_1.default(apiClient);
            this.paymentGateways = new paymentGateways_1.default(apiClient);
            this.customerGroups = new customerGroups_1.default(apiClient);
            this.sitemap = new sitemap_1.default(apiClient);
            this.theme = new theme_1.default(apiClient);
            this.theme.settings = new settings_3.default(apiClient);
            this.theme.assets = new assets_1.default(apiClient);
            this.theme.placeholders = new placeholders_1.default(apiClient);
            this.countries = new countries_1.default(apiClient);
            this.currencies = new currencies_1.default(apiClient);
            this.text = new text_1.default(apiClient);
            this.settings = new settings_2.default(apiClient);
            this.checkoutFields = new checkoutFields_1.default(apiClient);
            this.pages = new pages_1.default(apiClient);
            this.tokens = new tokens_1.default(apiClient);
            this.redirects = new redirects_1.default(apiClient);
            this.webhooks = new webhooks_1.default(apiClient);
            this.files = new files_1.default(apiClient);
            this.apps = { settings: {} };
            this.apps.settings = new settings_1.default(apiClient);
            this.ajax = {
                products: {},
                sitemap: {},
                cart: {},
                login: {},
                register: {},
                account: {},
                forgotPassword: {},
                resetPassword: {},
                cookieBanner: {},
                countries: {},
                currencies: {},
                shippingMethods: {},
                paymentMethods: {},
                paymentFormSettings: {},
                pages: {},
            };
            this.ajax.products = new products_1.default(ajaxClient);
            this.ajax.sitemap = new sitemap_1.default(ajaxClient);
            this.ajax.cart = new ajaxCart_1.default(ajaxClient);
            this.ajax.login = new ajaxLogin_1.default(ajaxClient);
            this.ajax.register = new ajaxRegister_1.default(ajaxClient);
            this.ajax.account = new ajaxAccount_1.default(ajaxClient);
            this.ajax.forgotPassword = new ajaxForgotPassword_1.default(ajaxClient);
            this.ajax.resetPassword = new ajaxResetPassword_1.default(ajaxClient);
            this.ajax.cookieBanner = new ajaxCookieBanner_1.default(ajaxClient);
            this.ajax.countries = new countries_1.default(ajaxClient);
            this.ajax.currencies = new currencies_1.default(ajaxClient);
            this.ajax.shippingMethods = new ajaxShippingMethods_1.default(ajaxClient);
            this.ajax.paymentMethods = new ajaxPaymentMethods_1.default(ajaxClient);
            this.ajax.paymentFormSettings = new ajaxPaymentFormSettings_1.default(ajaxClient);
            this.ajax.pages = new pages_1.default(ajaxClient);
            this.webstore = {
                account: {},
                services: { settings: {}, actions: {}, logs: {} },
            };
            this.webstore.account = new account_1.default(webstoreClient);
            this.webstore.services = new services_1.default(webstoreClient);
            this.webstore.services.settings = new serviceSettings_1.default(webstoreClient);
            this.webstore.services.actions = new serviceActions_1.default(webstoreClient);
            this.webstore.services.logs = new serviceLogs_1.default(webstoreClient);
        }
    }
    Client.authorize = (baseUrl, email) => apiClient_1.default.authorize(baseUrl, email);
    Client.authorizeInWebStore = (email, adminUrl) => webstoreClient_1.default.authorize(email, adminUrl);
    return Client;
})();
exports.default = Client;
//# sourceMappingURL=index.js.map